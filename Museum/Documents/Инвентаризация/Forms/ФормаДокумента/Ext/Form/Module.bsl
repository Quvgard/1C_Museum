
&НаКлиенте
Процедура ЭкспонатыНаименованиеПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Экспонаты.ТекущиеДанные;
	Информация = ПолучитьИнформациюОКТ(СтрокаТабличнойЧасти.Наименование);
	СтрокаТабличнойЧасти.Идентификатор = Информация[0];
	СтрокаТабличнойЧасти.Статус = Информация[1];
	СтрокаТабличнойЧасти.Местоположение = Информация[2];
КонецПроцедуры 

&НаСервере
Функция ПолучитьИнформациюОКТ(Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Экспонаты.Код КАК Код,
	|	Экспонаты.Статус КАК Статус,
	|	Экспонаты.Местоположение КАК Местоположение
	|ИЗ
	|	Справочник.Экспонаты КАК Экспонаты
	|ГДЕ
	|	Экспонаты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МассивДанных = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МассивДанных.Добавить(ВыборкаДетальныеЗаписи.Код);
		МассивДанных.Добавить(ВыборкаДетальныеЗаписи.Статус);
		МассивДанных.Добавить(ВыборкаДетальныеЗаписи.Местоположение);
	КонецЦикла; 
	
	Возврат МассивДанных;
КонецФункции

&НаСервере
Функция ПолучитьЗаписиРегистра(Сотрудник)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Экспонаты.Ссылка КАК Экспонаты,
	|	Экспонаты.Код КАК Идентификатор,
	|	Экспонаты.Местоположение КАК Местоположение,
	|	Экспонаты.Статус КАК Статус
	|ИЗ
	|	Справочник.Экспонаты КАК Экспонаты
	|ГДЕ
	|	Экспонаты.ОтветственноеЛицо = &ОтветственноеЛицо
	|	И Экспонаты.Статус <> &Списано";
	Запрос.УстановитьПараметр("ОтветственноеЛицо", Сотрудник);
	Запрос.УстановитьПараметр("Списано", Перечисления.СтатусыЭкспонатов.Списано);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	МассивДанных = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить("Экспонаты",ВыборкаДетальныеЗаписи.Экспонаты);
		Данные.Вставить("Идентификатор",ВыборкаДетальныеЗаписи.Идентификатор);
		Данные.Вставить("Местоположение",ВыборкаДетальныеЗаписи.Местоположение);
		Данные.Вставить("Статус",ВыборкаДетальныеЗаписи.Статус);
		МассивДанных.Добавить(Данные);
	КонецЦикла;
	
	Возврат МассивДанных;
КонецФункции


&НаСервере
Процедура ОбновлениеИнформации()
	Если НЕ Объект.НачалоПериода = Дата('00010101') И 
		НЕ Объект.КонецПериода = Дата('00010101') Тогда
		Объект.Экспонаты.Очистить();
		МассивДанных = ПолучитьЗаписиРегистра(Объект.ОтветственноеЛицо);
		Для Каждого Стр Из МассивДанных Цикл 
			СтрокаТЧ = Объект.Экспонаты.Добавить();
			СтрокаТЧ.Наименование = Стр.Экспонаты;
			СтрокаТЧ.Идентификатор = Стр.Идентификатор;
			СтрокаТЧ.Местоположение = Стр.Местоположение;
			СтрокаТЧ.Статус = Стр.Статус;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры  	

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Составитель = ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	СоставительИзСправочника = Справочники.Сотрудники.НайтиПоНаименованию(Составитель);
	Если НЕ СоставительИзСправочника.Пустая() Тогда
	ТекущийОбъект.Составитель = СоставительИзСправочника;     
	КонецЕсли;                                                
	История = РегистрыСведений.ИсторияИнвентаризации.СоздатьНаборЗаписей();   
	НачатьТранзакцию();
	Для Каждого ТК Из ТекущийОбъект.Экспонаты Цикл
		Экспонаты = ТК.Наименование.ПолучитьОбъект();
		Экспонаты.Статус = ТК.Статус;
		Экспонаты.Записать();  
		
		История.Прочитать();
		ЗаписьИстории = История.Добавить();
		ЗаписьИстории.Период = Объект.Дата;
		ЗаписьИстории.Экспонат = Экспонаты.Ссылка;
		ЗаписьИстории.Идентификатор = Экспонаты.Код;
		ЗаписьИстории.Местоположение = Экспонаты.Местоположение;
		ЗаписьИстории.ОтветственноеЛицо = Экспонаты.ОтветственноеЛицо;  
		ЗаписьИстории.Статус = Экспонаты.Статус;
		История.Записать();
			
	КонецЦикла;
    ЗафиксироватьТранзакцию();
КонецПроцедуры                     

&НаКлиенте
Процедура ОтветственноеЛицоПриИзменении(Элемент)  
	ОбновлениеИнформации();   
КонецПроцедуры   

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	ОбновлениеИнформации();          
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	ОбновлениеИнформации();     
КонецПроцедуры



