
//&НаКлиенте
//Перем Ключ;

&НаКлиенте
Перем Сайт;

&НаКлиенте
Перем Адрес;

&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьЗапрос();
	
КонецПроцедуры


&НаКлиенте
Асинх Процедура ОтправитьЗапрос()

	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		Чат = Чат + ("" + Символы.ПС + Символы.ПС + "✎ " + ТекстЗапроса);
		
		Текст = ТекстЗапроса;
		
		ТекстЗапроса = "";
		
		ОчереднойОтвет = Ждать ОтправитьОчереднойЗапрос(Текст);
		
		Чат = Чат + ("" + Символы.ПС + Символы.ПС + "⌘ " + ОчереднойОтвет);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Асинх Функция ОтправитьОчереднойЗапрос(Знач Текст)
	
	Соединение = Новый HTTPСоединение(Сайт, 443, , , , , Новый ЗащищенноеСоединениеOpenSSL());
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type"	, "application/json");
	Заголовки.Вставить("Authorization"	, "Bearer " + Ключ);
	Заголовки.Вставить("Connection"		, "keep-alive");
	
	Запрос = Новый HTTPЗапрос(Адрес, Заголовки);
	
	Сообщение = Новый Структура;
	Сообщение.Вставить("role"	, "user");
	Сообщение.Вставить("content", Текст);
	
	Сообщения = Новый Массив;
	Сообщения.Добавить(Сообщение);
	
	ВходныеПараметры = Новый Структура;
	ВходныеПараметры.Вставить("model"		, "gpt-3.5-turbo");
	ВходныеПараметры.Вставить("messages"	, Сообщения);
	ВходныеПараметры.Вставить("temperature"	, 0.7);
	
	Тело = ДанныеВJSON(ВходныеПараметры);

	Запрос.УстановитьТелоИзСтроки(Тело);
	
	//Ответ = Ждать Соединение.ОтправитьДляОбработкиАсинх(Запрос);
	Ответ = Соединение.ОтправитьДляОбработки(Запрос);
	
	Тело = Ответ.ПолучитьТелоКакСтроку();
	
	Результат = ДанныеИзJSON(Тело);
	
	Попытка
		Возврат Результат.choices[0].message.content;
	Исключение
		Сообщить("Получен ошибочный ответ (отсутствует choices): " + Тело);
	КонецПопытки;
	
КонецФункции

Функция ДанныеВJSON(Значение, Знач ПараметрыЗаписиJSON = Неопределено, НастройкиСериализации = Неопределено) Экспорт
    Если ПараметрыЗаписиJSON = Неопределено Тогда
        ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
    КонецЕсли;
    
    ЗаписьJSON = Новый ЗаписьJSON();
    ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
    ЗаписатьJSON(ЗаписьJSON, Значение, НастройкиСериализации);
    Результат = ЗаписьJSON.Закрыть();    
    
    Возврат Результат;
КонецФункции

//Аналог ПрочитатьЗначениеJSON
Функция ДанныеИзJSON(ДанныеJSON, ИзФайла = Ложь, ПрочитатьВСоответствие = Ложь, ЗначениеПоУмолчанию = Неопределено, ОписаниеОшибки = "") Экспорт
    ЧтениеJSON = Новый ЧтениеJSON();
    
    Если ИзФайла = Истина Тогда
        ЧтениеJSON.ОткрытьФайл(ДанныеJSON);
    Иначе
        ЧтениеJSON.УстановитьСтроку(ДанныеJSON);
    КонецЕсли;
    
    Попытка
        Результат = ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие);
    Исключение
        ОписаниеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
        Результат = ЗначениеПоУмолчанию;
    КонецПопытки;
    
    Возврат Результат;
КонецФункции


Сайт	= "api.openai.com";
Адрес	= "/v1/chat/completions";
//Ключ	= "";